######
# Need to source the BRAINS wrapper scripts.
update
source @COMMON_INCLUDE_SCRIPT@

#######
####### The Real Work

## Author Hans J. Johnson
proc TestGaussianSmoothAndWrite {} {
  set fileName @COMMON_DATA_DIR@/AVG_T1.nii.gz
  set inputImage [ b2_load_image ${fileName} ]
##set outputCopyFileName /Users/hjohnson/Desktop/NewCopyFile.nii.gz
  set outputCopyFileName @B2COMMANDTEST_BINARY_DIR@/NewCopyFile.nii.gz
  b2_save_image ${inputImage} ${outputCopyFileName}
######   Create Gaussian Image
  set GaussianImage [b2_gaussian_filter ${inputImage} ]
##set outputGaussianFileName /Users/hjohnson/Desktop/NewGaussianFile.nii.gz
  set outputGaussianFileName @B2COMMANDTEST_BINARY_DIR@/NewGaussianFile.nii.gz
  b2_save_image ${GaussianImage} ${outputGaussianFileName}

#get dims of input image and write to the screen
 set inputdims b2_get_dims_image ${inputimage}
 puts "printing out info on input image"
 puts "$inputdims"

#get dims of input image and write to the screen
 set gaussiandims b2_get_dims_image ${GaussianImage}
 puts "printing out info on guassian image"
 puts "$gaussiandims"

 #  NEED TO FIND OUT HOW TO SET THE RESULTING IMAGES (inputimage, GaussianImage, and differenceImage) to be displayed in Slicer
 #   Note!  A simple and correct way to compute an imageList is
 #     <list $imageVar1 $imageVar2 ...>
 #  <myList $inputimage $GaussianImage>
 #b2_image_subtract(myList)


  ${inputImage} Delete
  ${GaussianImage} Delete
}

proc runtest {} {
      set ret [ catch {
                 $::slicer3::Application TraceScript TestGaussianSmoothAndWrite
                       } res]

#      set ff [open logger "w"]
#      puts $ff $ret $res
#      close $ff
      if { $ret } {
            puts stderr $res
#            exit -1; #Failure
      }
#      exit 0; #Success
}

update
after idle runtest

#DestroyBatchMRMLScene
