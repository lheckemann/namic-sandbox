PROJECT(ScannerIO)

INCLUDE (CheckIncludeFiles)

#
# PLATFORMS
#

IF(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
  ADD_DEFINITIONS(-DPLATFORM_OSX)
  ADD_DEFINITIONS(-DIGTL_USE_PTHREADS)
  IF(CMAKE_SYSTEM_VERSION MATCHES "9\\.[0-9]*\\.[0-9]*")
    ADD_DEFINITIONS(-DPLATFORM_OSX_LEOPARD)
  ENDIF(CMAKE_SYSTEM_VERSION MATCHES "9\\.[0-9]*\\.[0-9]*")
ENDIF(CMAKE_SYSTEM_NAME STREQUAL "Darwin")

IF(CMAKE_SYSTEM_NAME MATCHES Linux)
ADD_DEFINITIONS(-DPLATFORM_LINUX)
ADD_DEFINITIONS(-DIGTL_USE_PTHREADS)
SET(LINUX 1)
SET(CMAKE_C_FLAGS -fPIC)
SET(CMAKE_CXX_FLAGS -fPIC)
ENDIF(CMAKE_SYSTEM_NAME MATCHES Linux)

IF(CMAKE_SYSTEM_NAME STREQUAL "Windows")
ADD_DEFINITIONS(-DPLATFORM_WIN32)
ADD_DEFINITIONS(-IGTL_USE_WIN32_THREADS)
SET(WIN32 1)
ENDIF(CMAKE_SYSTEM_NAME STREQUAL "Windows")


#
# TYPE SIZES
#

INCLUDE (CheckTypeSize)
CHECK_TYPE_SIZE(int         CMAKE_SIZEOF_INT)
CHECK_TYPE_SIZE(long        CMAKE_SIZEOF_LONG)
CHECK_TYPE_SIZE("void*"     CMAKE_SIZEOF_VOID_P)
CHECK_TYPE_SIZE(char        CMAKE_SIZEOF_CHAR)
CHECK_TYPE_SIZE(short       CMAKE_SIZEOF_SHORT)
CHECK_TYPE_SIZE(float       CMAKE_SIZEOF_FLOAT)
CHECK_TYPE_SIZE(double      CMAKE_SIZEOF_DOUBLE)
CHECK_TYPE_SIZE("long long" CMAKE_SIZEOF_LONG_LONG)
CHECK_TYPE_SIZE("__int64"   CMAKE_SIZEOF___INT64)
CHECK_TYPE_SIZE("int64_t"   CMAKE_SIZEOF_INT64_T)

ADD_DEFINITIONS(-DIGTL_SIZEOF_CHAR=${CMAKE_SIZEOF_CHAR})
ADD_DEFINITIONS(-DIGTL_SIZEOF_DOUBLE=${CMAKE_SIZEOF_DOUBLE})
ADD_DEFINITIONS(-DIGTL_SIZEOF_FLOAT=${CMAKE_SIZEOF_FLOAT})
ADD_DEFINITIONS(-DIGTL_SIZEOF_INT=${CMAKE_SIZEOF_INT})
ADD_DEFINITIONS(-DIGTL_SIZEOF_LONG=${CMAKE_SIZEOF_LONG})
ADD_DEFINITIONS(-DIGTL_SIZEOF_SHORT=${CMAKE_SIZEOF_SHORT})
ADD_DEFINITIONS(-DIGTL_SIZEOF_FLOAT=${CMAKE_SIZEOF_FLOAT})
ADD_DEFINITIONS(-DIGTL_SIZEOF_DOUBLE=${CMAKE_SIZEOF_DOUBLE})

IF(CMAKE_SIZEOF_LONG_LONG)
  ADD_DEFINITIONS(-DIGTL_TYPE_USE_LONG_LONG=1)
  ADD_DEFINITIONS(-DIGTL_SIZEOF_LONG_LONG=${CMAKE_SIZEOF_LONG_LONG})
ELSE(CMAKE_SIZEOF_LONG_LONG)
IF(CMAKE_SIZEOF___INT64)
  ADD_DEFINITIONS(-DIGTL_TYPE_USE___INT64=1)
  ADD_DEFINITIONS(-DIGTL_SIZEOF___INT64=${CMAKE_SIZEOF___INT64})
ELSE(CMAKE_SIZEOF___INT64)
IF(CMAKE_SIZEOF_INT64_T)
  ADD_DEFINITIONS(-DIGTL_TYPE_USE_INT64_T=1)
  ADD_DEFINITIONS(-DIGTL_SIZEOF_INT64_T=${CMAKE_SIZEOF_INT64_T})
ENDIF(CMAKE_SIZEOF_INT64_T)
ENDIF(CMAKE_SIZEOF___INT64)
ENDIF(CMAKE_SIZEOF_LONG_LONG)


#
# EXTERNAL LIBRARIES
#

FIND_PATH(RSP_FILES
   NAMES rspProxyUtils.o
   PATH  ${ROOT_DIR}/../GEFiles/GE_Excite_v14
)

IF(RSP_FILES)
ADD_DEFINITIONS(-D_RSP_CONTROL)
ENDIF(RSP_FILES)


INCLUDE_DIRECTORIES(
${CMAKE_CURRENT_SOURCE_DIR}/src/
${CMAKE_CURRENT_SOURCE_DIR}/src/igtlutil
libs/
${RSP_FILES}/GEMS_Include_11.03/
${RSP_FILES}/./
)

ADD_DEFINITIONS(-DACE_AS_STATIC_LIBS)

OPTION(BUILD_SHARED "Build Shared Libraries" ON)

LINK_DIRECTORIES(
libs/ace
libs/newmat
${RSP_FILES}/GEMS_Libs_11.03
${RSP_FILES}
)

SET(SOURCES
src/igtlutil/igtl_util.c
src/igtlutil/igtl_header.c
src/igtlutil/igtl_image.c
src/igtlutil/igtl_transform.c
src/igtlutil/crc32.c
src/io_base.c
src/io_signa5.c
src/igtlImageMessage.cxx
src/igtlTransformMessage.cxx
src/igtlMath.cxx
src/igtlOSUtil.cxx
src/igtlMessageBase.cxx
src/igtlObject.cxx
src/igtlLightObject.cxx
src/igtlObjectFactoryBase.cxx
src/igtlSimpleFastMutexLock.cxx
src/igtlFastMutexLock.cxx
src/igtlSocket.cxx
src/igtlClientSocket.cxx
src/igtlServerSocket.cxx
src/igtlMultiThreader.cxx
src/igtlMutexLock.cxx
src/igtlConditionVariable.cxx
src/Thread.cxx
src/AcquisitionBase.cxx
src/AcquisitionSimulator.cxx
src/AcquisitionTrackingSimulator.cxx
src/AcquisitionSignaSPSimulator.cxx
src/AcquisitionGEExcite.cxx
src/TransferBase.cxx
src/TransferOpenIGTLink.cxx
src/ScannerBase.cxx
)


IF(RSP_FILES)
SET(LIBS
${LIBS}
mrmailc
CnvEndianBase
eventmgr
cupfound
cupipc
msghand
gemshid
readableString
)
IF(EXISTS ${RSP_FILES}/GEMS_Include_11.03)
SET(SOURCES
${SOURCES}
${RSP_FILES}/rsp_ops.c
${RSP_FILES}/rspProxyUtil.c
)
ELSE(EXISTS ${RSP_FILES}/GEMS_Include_11.03)
SET(LINK_W_O_FILES TRUE)
ENDIF(EXISTS ${RSP_FILES}/GEMS_Include_11.03)

ENDIF(RSP_FILES)


IF(BUILD_SHARED)
ADD_LIBRARY(ScannerIOLib SHARED
${SOURCES}
)
ELSE(BUILD_SHARED)
ADD_LIBRARY(ScannerIOLib
${SOURCES}
)
ENDIF(BUILD_SHARED)




SUBDIRS(
libs/ace
libs/newmat
)


SET(LIBS
${LIBS}
ACE
newmat
)

IF(NOT WIN32)
SET(LIBS
${LIBS}
ncurses
pthread
dl
)
IF(LINUX)
SET(EXTRA_LIBS
rt
)
ENDIF(LINUX)
ENDIF(NOT WIN32)


TARGET_LINK_LIBRARIES(ScannerIOLib
${LIBS}
)

IF(LINK_W_O_FILES)
#SET_TARGET_PROPERTIES(ScannerSim
#PROPERTIES LINK_FLAGS "${RSP_FILES}/rspProxyUtil.o ${RSP_FILES}/rsp_ops.o"
#)
#SET_TARGET_PROPERTIES(TrackerSim
#PROPERTIES LINK_FLAGS "${RSP_FILES}/rspProxyUtil.o ${RSP_FILES}/rsp_ops.o"
#)
SET_TARGET_PROPERTIES(GEExciteIGTL
PROPERTIES LINK_FLAGS "${RSP_FILES}/rspProxyUtil.o ${RSP_FILES}/rsp_ops.o"
)
ENDIF(LINK_W_O_FILES)



ADD_EXECUTABLE(ScannerSim src/simulator.cxx)
ADD_EXECUTABLE(SignaSPSim src/signasp.cxx)
ADD_EXECUTABLE(TrackerSim src/tracker.cxx)
ADD_EXECUTABLE(GEExciteIGTL src/GEExciteIGTL.cxx)

TARGET_LINK_LIBRARIES(ScannerSim
${EXTRA_LIBS}
ScannerIOLib
)

TARGET_LINK_LIBRARIES(SignaSPSim
${EXTRA_LIBS}
ScannerIOLib
)

TARGET_LINK_LIBRARIES(TrackerSim
${EXTRA_LIBS}
ScannerIOLib
)

TARGET_LINK_LIBRARIES(GEExciteIGTL
${EXTRA_LIBS}
ScannerIOLib
)

SET(EXECUTABLE_OUTPUT_PATH
bin
)


