PROJECT ( CLRegistration )

FIND_PACKAGE ( ITK )
IF ( ITK_FOUND )
  INCLUDE(${ITK_USE_FILE})
ELSE ( ITK_FOUND )
  MESSAGE ( FATAL_ERROR "Cannot build without ITK" )
ENDIF ( ITK_FOUND )

INCLUDE(UseGenerateCLP.cmake)

INCLUDE_DIRECTORIES (
                    "${CLRegistration_SOURCE_DIR}/tclap/include"
                    "${CLRegistration_SOURCE_DIR}/cli4cpp-0.3/include" )

SET ( SOURCE CLRegistration.cxx 
cli4cpp-0.3/src/BasicParser.cpp
cli4cpp-0.3/src/Parser.cpp
cli4cpp-0.3/src/CommandLine.cpp
cli4cpp-0.3/src/HelpFormatter.cpp
cli4cpp-0.3/src/JSONHelpFormatter.cpp
cli4cpp-0.3/src/Option.cpp
cli4cpp-0.3/src/Options.cpp
)

SET (GENERATECLP_SOURCE GenerateCLP.cxx)
ADD_EXECUTABLE ( GenerateCLP ${GENERATECLP_SOURCE})
TARGET_LINK_LIBRARIES ( GenerateCLP ITKEXPAT)

SET ( CLPEXAMPLE1_SOURCE CLPExample1.cxx )
GENERATECLP(CLPEXAMPLE1_SOURCE CLPExample1.xml)
ADD_EXECUTABLE ( CLPExample1 ${CLPEXAMPLE1_SOURCE})
TARGET_LINK_LIBRARIES ( CLPExample1 ITKEXPAT)

SET ( CLREGISTRATION_SOURCE CLRegistration.cxx )
GENERATECLP(CLREGISTRATION_SOURCE CLRegistration.xml)
ADD_EXECUTABLE ( CLRegistration ${CLREGISTRATION_SOURCE})
TARGET_LINK_LIBRARIES ( CLRegistration ITKEXPAT ITKIO ITKNumerics ITKBasicFilters ITKAlgorithms)
