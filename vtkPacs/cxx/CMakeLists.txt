#
# Source files: DO NOT EDIT THIS FILE: edit CMakeListsLocal.txt instead.
#
#

SET (LOCAL_LIBRARY_BASENAME vtkPacs)

INCLUDE (${VTKPACS_SOURCE_DIR}/cxx/CMakeListsLocal.txt)

# --------------------------------------------------------------------------
# You probably do not need to modify anything below this line

#
# Create the vtkPacs C++ library
#
# (Doesn't work here because of a CMake bug)
# ADD_LIBRARY (vtkPacs LOCAL_MODULE_SRCS)

#
# Create the vtkPacs Tcl library
#

IF (VTK_WRAP_TCL AND VTKPACS_WRAP_TCL)

  VTK_WRAP_TCL (vtkPacsTCL PacsTCL_SRCS LOCAL_MODULE_SRCS)
  ADD_LIBRARY (vtkPacsTCL PacsTCL_SRCS)
#A partir de Rendering, anhadido por mi
  TARGET_LINK_LIBRARIES (vtkPacsTCL 
                         vtkIOTCL 
                         vtkGraphicsTCL 
                         vtkImagingTCL 
                         vtkFilteringTCL 
                         vtkCommonTCL

                         vtkRenderingTCL
                         vtkHybridTCL
                         vtkPatentedTCL

                         ${TCL_LIBRARY})
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkPacsTCL vtkHybridTCL)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkPacsTCL vtkParallelTCL)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkPacsTCL vtkPatentedTCL)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkPacsTCL vtkRenderingTCL)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_TCL AND VTKPACS_WRAP_TCL)

#
# Create the vtkPacs Python library
#

IF (VTK_WRAP_PYTHON AND VTKPACS_WRAP_PYTHON)

  VTK_WRAP_PYTHON (vtkPacsPython PacsPython_SRCS LOCAL_MODULE_SRCS)

  IF (APPLE)
    ADD_LIBRARY (vtkPacsPython MODULE PacsPython_SRCS)
  ELSE (APPLE)
    ADD_LIBRARY (vtkPacsPython SHARED PacsPython_SRCS)
  ENDIF (APPLE)

  IF (WIN32)
    TARGET_LINK_LIBRARIES (vtkPacsPython 
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           debug ${PYTHON_DEBUG_LIBRARY} 
                           optimized ${PYTHON_LIBRARY})
  ELSE (WIN32)
    TARGET_LINK_LIBRARIES (vtkPacsPython 
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           ${PYTHON_LIBRARY})
  ENDIF (WIN32)

  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkPacsPython vtkHybridPython)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkPacsPython vtkParallelPython)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkPacsPython vtkPatentedPython)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkPacsPython vtkRenderingPython)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_PYTHON AND VTKPACS_WRAP_PYTHON)

#
# Create the vtkPacs Java library
#

IF (VTK_WRAP_JAVA AND VTKPACS_WRAP_JAVA)

  VTK_WRAP_JAVA (vtkPacsJava PacsJava_SRCS LOCAL_MODULE_SRCS)
  ADD_LIBRARY (vtkPacsJava SHARED PacsJava_SRCS)
  TARGET_LINK_LIBRARIES (vtkPacsJava 
                         vtkIOJava
                         vtkGraphicsJava
                         vtkImagingJava 
                         vtkFilteringJava
                         vtkCommonJava)
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkPacsJava vtkHybridJava)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkPacsJava vtkParallelJava)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkPacsJava vtkPatentedJava)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkPacsJava vtkRenderingJava)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_JAVA AND VTKPACS_WRAP_JAVA)

#
# Link to VTK and local
#

LINK_LIBRARIES (
  vtkPacs
  vtkIO
  vtkGraphics
  vtkImaging 
  vtkFiltering
  vtkCommon
)

IF (VTK_USE_HYBRID)
  LINK_LIBRARIES (vtkHybrid)
ENDIF (VTK_USE_HYBRID)

IF (VTK_USE_PARALLEL)
  LINK_LIBRARIES (vtkParallel)
ENDIF (VTK_USE_PARALLEL)

IF (VTK_USE_PATENTED)
  LINK_LIBRARIES (vtkPatented)
ENDIF (VTK_USE_PATENTED)

IF (VTK_USE_RENDERING)
  LINK_LIBRARIES (vtkRendering)
ENDIF (VTK_USE_RENDERING)



