# This is the CMakeCache file.
# For build in directory: /projects/birn/keilhack/workspace/WFEngine
# It was generated by CMake: /projects/igtdev/keilhack/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUI's for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a file.
ASIO_INCLUDE_DIR:PATH=/projects/birn/keilhack/workspace/asio/include

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//For backwards compatibility, what version of CMake commands and
// syntax should this version of CMake allow.
CMAKE_BACKWARDS_COMPATIBILITY:STRING=2.5

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
//
CMAKE_BUILD_TYPE:STRING=

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler.
CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=' '

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release minsize builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds (/MD /Ob1 /Oi
// /Ot /Oy /Gs will produce slightly less optimized but smaller
// files).
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during Release with Debug Info builds.
//
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g

//C compiler.
CMAKE_C_COMPILER:FILEPATH=/usr/bin/gcc

//Flags for C compiler.
CMAKE_C_FLAGS:STRING=' '

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release minsize builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds (/MD /Ob1 /Oi
// /Ot /Oy /Gs will produce slightly less optimized but smaller
// files).
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during Release with Debug Info builds.
//
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
//
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/projects/birn/keilhack

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/gmake

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
//
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
//
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when using shared libraries.
//
CMAKE_SKIP_RPATH:BOOL=NO

//If true, cmake will use relative paths in makefiles and projects.
//
CMAKE_USE_RELATIVE_PATHS:BOOL=OFF

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Single output directory for building all executables.
EXECUTABLE_OUTPUT_PATH:PATH=

//The directory containing KWWidgetsConfig.cmake.
KWWidgets_DIR:PATH=/projects/birn/keilhack/workspace/KWWidgets

//Single output directory for building all libraries.
LIBRARY_OUTPUT_PATH:PATH=

//Path to a file.
LOKI_INCLUDE_DIR:PATH=/projects/birn/keilhack/workspace/loki-lib-svn/include

//Path to a library.
LOKI_LIBRARY:FILEPATH=/projects/birn/keilhack/workspace/loki-lib-svn/lib/libloki.so.0.1.6

//The directory containing LokiConfig.cmake.
Loki_DIR:PATH=/projects/birn/keilhack/workspace/loki-lib-svn

//Path to a file.
TCL_INCLUDE_PATH:PATH=/projects/birn/keilhack/lib/../include

//Location of Tcl library imported from VTK.  This may mean your
// project is depending on VTK to get this setting.  Consider using
// FindTCL.cmake.
TCL_LIBRARY:FILEPATH=/projects/birn/keilhack/lib/libtcl8.4.so

//Path to a library.
TCL_LIBRARY_DEBUG:FILEPATH=TCL_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
TCL_STUB_LIBRARY:FILEPATH=/projects/birn/keilhack/lib/libtclstub8.4.a

//Path to a library.
TCL_STUB_LIBRARY_DEBUG:FILEPATH=TCL_STUB_LIBRARY_DEBUG-NOTFOUND

//Path to a program.
TCL_TCLSH:FILEPATH=/usr/bin/tclsh

//Path to a file.
TK_INCLUDE_PATH:PATH=/projects/birn/keilhack/lib/../include

//Location of Tk library imported from VTK.  This may mean your
// project is depending on VTK to get this setting.  Consider using
// FindTCL.cmake.
TK_LIBRARY:FILEPATH=/projects/birn/keilhack/lib/libtk8.4.so

//Path to a library.
TK_LIBRARY_DEBUG:FILEPATH=TK_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
TK_STUB_LIBRARY:FILEPATH=/projects/birn/keilhack/lib/libtkstub8.4.a

//Path to a library.
TK_STUB_LIBRARY_DEBUG:FILEPATH=TK_STUB_LIBRARY_DEBUG-NOTFOUND

//Path to a program.
TK_WISH:FILEPATH=/usr/bin/wish

//The directory containing VTKConfig.cmake.  This is either the
// root of the build tree, or PREFIX/lib/vtk for an installation.
//  For VTK 4.0, this is the location of UseVTK.cmake.  This is
// either the root of the build tree or PREFIX/include/vtk for
// an installation.
VTK_DIR:PATH=/projects/birn/keilhack/workspace/VTK

//Dependencies for the target
WFBaseEngine_LIB_DEPENDS:STATIC=WFInterface;WFXmlManager;/projects/birn/keilhack/workspace/loki-lib-svn/lib/libloki.so.0.1.6;

//Want you to build the WFConfigEditor?
WFCONFIGEDITOR:BOOL=ON

//Value Computed by CMake
WFEConfigEditor_BINARY_DIR:STATIC=/projects/birn/keilhack/workspace/WFEngine/src/wfConfigEditor

//Value Computed by CMake
WFEConfigEditor_SOURCE_DIR:STATIC=/projects/birn/keilhack/workspace/WFEngine/src/wfConfigEditor

//Path to a library.
WFENGINE_LIBRARY:FILEPATH=WFENGINE_LIBRARY-NOTFOUND

//Value Computed by CMake
WFEngine_BINARY_DIR:STATIC=/projects/birn/keilhack/workspace/WFEngine/src/xmlManager

//Value Computed by CMake
WFEngine_SOURCE_DIR:STATIC=/projects/birn/keilhack/workspace/WFEngine/src/xmlManager

//Dependencies for target
WFInterface_LIB_DEPENDS:STATIC=

//Want you to build the WFTestClient?
WFTESTCLIENT:BOOL=ON

//Value Computed by CMake
WFTestClient_BINARY_DIR:STATIC=/projects/birn/keilhack/workspace/WFEngine/src/test

//Value Computed by CMake
WFTestClient_SOURCE_DIR:STATIC=/projects/birn/keilhack/workspace/WFEngine/src/test

//Dependencies for the target
WFXmlManager_LIB_DEPENDS:STATIC=/projects/birn/keilhack/workspace/xercesc/obj/.libs/libxerces-3.0.so;

//Path to a file.
XERCESC_INCLUDE_DIR:PATH=/projects/birn/keilhack/workspace/xercesc/src

//Path to a library.
XERCESC_LIBRARY:FILEPATH=/projects/birn/keilhack/workspace/xercesc/obj/.libs/libxerces-3.0.so


########################
# INTERNAL cache entries
########################

//Modified flag for variable: ASIO_INCLUDE_DIR
ASIO_INCLUDE_DIR-MODIFIED:INTERNAL=1
//Advanced flag for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_BUILD_TOOL
CMAKE_BUILD_TOOL-ADVANCED:INTERNAL=1
//What is the target build tool cmake is generating for.
CMAKE_BUILD_TOOL:INTERNAL=/usr/bin/gmake
//This is the directory where this CMakeCahe.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/projects/birn/keilhack/workspace/WFEngine
//Major version of cmake used to create the current loaded cache
//
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=2
//Minor version of cmake used to create the current loaded cache
//
CMAKE_CACHE_MINOR_VERSION:INTERNAL=5
//Major version of cmake used to create the current loaded cache
//
CMAKE_CACHE_RELEASE_VERSION:INTERNAL=development
//Advanced flag for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/projects/igtdev/keilhack/bin/cmake
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/projects/igtdev/keilhack/bin/ctest
//Advanced flag for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
CMAKE_CXX_COMPILER_WORKS:INTERNAL=1
//Advanced flag for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
CMAKE_C_COMPILER_WORKS:INTERNAL=1
//Advanced flag for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/projects/igtdev/keilhack/bin/ccmake
//Advanced flag for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
//
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
//
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Have library pthreads
CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
//Have library pthread
CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=1
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Start directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/projects/birn/keilhack/workspace/WFEngine
//Modified flag for variable: CMAKE_INSTALL_PREFIX
CMAKE_INSTALL_PREFIX-MODIFIED:INTERNAL=1
//Advanced flag for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
//
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
//
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
//
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_LOCAL_GENERATORS:INTERNAL=7
//Advanced flag for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/projects/igtdev/keilhack/share/cmake-2.5
//Advanced flag for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
//
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
//
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
//
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Result of TRY_RUN
CMAKE_SIZEOF_VOID_P:INTERNAL=8
//Advanced flag for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/bin/uname
//Advanced flag for variable: CMAKE_USE_RELATIVE_PATHS
CMAKE_USE_RELATIVE_PATHS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
HAVE_CMAKE_SIZEOF_VOID_P:INTERNAL=TRUE
//Modified flag for variable: KWWidgets_DIR
KWWidgets_DIR-MODIFIED:INTERNAL=1
//Modified flag for variable: LOKI_INCLUDE_DIR
LOKI_INCLUDE_DIR-MODIFIED:INTERNAL=1
//Modified flag for variable: LOKI_LIBRARY
LOKI_LIBRARY-MODIFIED:INTERNAL=1
//Modified flag for variable: Loki_DIR
Loki_DIR-MODIFIED:INTERNAL=1
//Advanced flag for variable: TCL_INCLUDE_PATH
TCL_INCLUDE_PATH-ADVANCED:INTERNAL=1
//Modified flag for variable: TCL_INCLUDE_PATH
TCL_INCLUDE_PATH-MODIFIED:INTERNAL=1
//Advanced flag for variable: TCL_LIBRARY
TCL_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: TCL_LIBRARY_DEBUG
TCL_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: TCL_STUB_LIBRARY
TCL_STUB_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: TCL_STUB_LIBRARY_DEBUG
TCL_STUB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: TCL_TCLSH
TCL_TCLSH-ADVANCED:INTERNAL=1
//Advanced flag for variable: TK_INCLUDE_PATH
TK_INCLUDE_PATH-ADVANCED:INTERNAL=1
//Advanced flag for variable: TK_LIBRARY
TK_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: TK_LIBRARY_DEBUG
TK_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: TK_STUB_LIBRARY
TK_STUB_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: TK_STUB_LIBRARY_DEBUG
TK_STUB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: TK_WISH
TK_WISH-ADVANCED:INTERNAL=1
//Modified flag for variable: VTK_DIR
VTK_DIR-MODIFIED:INTERNAL=1
//Modified flag for variable: WFCONFIGEDITOR
WFCONFIGEDITOR-MODIFIED:INTERNAL=1
//Modified flag for variable: WFTESTCLIENT
WFTESTCLIENT-MODIFIED:INTERNAL=1
//Modified flag for variable: XERCESC_INCLUDE_DIR
XERCESC_INCLUDE_DIR-MODIFIED:INTERNAL=1
//Modified flag for variable: XERCESC_LIBRARY
XERCESC_LIBRARY-MODIFIED:INTERNAL=1

