PROJECT(StreamingImageViewer)

FIND_PACKAGE(ITK REQUIRED)
IF(ITK_FOUND)
  INCLUDE(${ITK_USE_FILE})
ENDIF(ITK_FOUND)

INCLUDE_DIRECTORIES( BEFORE ${StreamingImageViewer_SOURCE_DIR}/Source )

OPTION(USE_YAFF "Testing the YAFF File Format that is dynamicly loaded" OFF)

SUBDIRS(
  Source
  Testing
  )


SET(LIBRARY_OUTPUT_PATH ${StreamingImageViewer_BINARY_DIR}/bin CACHE INTERNAL "Single output directory for building all libraries.")

LINK_DIRECTORIES( ${LIBRARY_OUTPUT_PATH}) 

ENABLE_TESTING()

INCLUDE (${CMAKE_ROOT}/Modules/Dart.cmake)
OPTION(KWSTYLE_USE_VIM_FORMAT "Set KWStyle to generate errors with a VIM-compatible format." OFF)
OPTION(KWSTYLE_USE_MSVC_FORMAT "Set KWStyle to generate errors with a VisualStudio-compatible format." OFF)

FIND_PROGRAM(KWSTYLE_EXECUTABLE
NAMES KWStyle
PATHS
/usr/local/bin
)

IF(EXISTS ${KWSTYLE_EXECUTABLE})

SET(KWSTYLE_ARGUMENTS
  -xml ${ITK_DIR}/Utilities/KWStyle/ITK.kws.xml -v -D ${ITK_DIR}/Utilities/KWStyle/ITKFiles.txt
  -o ${PROJECT_SOURCE_DIR}/Utilities/KWStyle/ITKOverwrite.txt
  )

IF(KWSTYLE_USE_VIM_FORMAT)
  SET(KWSTYLE_ARGUMENTS -vim ${KWSTYLE_ARGUMENTS})
ENDIF(KWSTYLE_USE_VIM_FORMAT)

IF(KWSTYLE_USE_MSVC_FORMAT)
  SET(KWSTYLE_ARGUMENTS -msvc ${KWSTYLE_ARGUMENTS})
ENDIF(KWSTYLE_USE_MSVC_FORMAT)

ADD_CUSTOM_COMMAND(
  OUTPUT ${StatisticsRefactoring_BINARY_DIR}/KWStyleReport.txt
  COMMAND ${KWSTYLE_EXECUTABLE}
  ARGS    ${KWSTYLE_ARGUMENTS}
  COMMENT "Coding Style Checker"
  )
  ADD_CUSTOM_TARGET(StyleCheck DEPENDS ${StatisticsRefactoring_BINARY_DIR}/KWStyleReport.txt)
  ADD_TEST(KWStyleTest ${KWSTYLE_EXECUTABLE} ${KWSTYLE_ARGUMENTS})
ENDIF(EXISTS ${KWSTYLE_EXECUTABLE})

