#!/bin/tcsh

source $HOME/.login
source $HOME/.cshrc

set HOST = `hostname -s`
echo "HOST = " $HOST

if !(-f $HOME/$HOST/.build_testrc) then
   echo $HOME/$HOST/".build_testrc file does not exist, exiting..."
   exit
else
   source $HOME/$HOST/.build_testrc
endif

echo "PURIFY_HOME = " $PURIFY_HOME
echo "BUILD_DIR = " $BUILD_DIR

if !(${?CVSROOT}) then
   echo "CVSROOT is not set, exiting..."
   $MAIL-s "cvs update failed, CVSROOT is not set" $MAILING_LIST < /dev/null
   exit
else
   echo "CVSROOT = " $CVSROOT
endif

if !(${?CVS_RSH}) then
   echo "CVS_RSH is not set, exiting..."
   $MAIL-s "cvs update failed, CVS_RSH is not set" $MAILING_LIST < /dev/null
   exit
else
   echo "CVS_RSH = " $CVS_RSH
endif

# Get the time stamp.
set DateTimeStamp = `date +"%h%d_%Y_%H_%M"`

# Define the cron log file name.
set CRON_LOG_FILE = cvs.cron.`date +\%h\%d_\%Y`

# Configure environment for cvs.
echo "Configuring CVS environment..."
set CVS_PATH = `which cvs`

if !(${?CVS_PATH}) then
   echo "CVS_PATH is not set, exiting..."
   $MAIL-s "cvs update failed, CVS_PATH is not set" $MAILING_LIST < /dev/null
   exit
else
   echo "CVS_PATH = " $CVS_PATH
endif

if !(-d $BUILD_DIR) then
   mkdir $BUILD_DIR 
endif

cd $BUILD_DIR
# cvs update all necessary modules.
echo "Updating all modules..."

# Remove existing brains2 and buildhome
if !(-d $BUILD_DIR/brains2) then
   echo "brains2 directory does not exist, using cvs co instead."
   $CVS_PATH co brains2 
else
   $CVS_PATH update -A brains2
endif

if !(-d $BUILD_DIR/buildhome) then
   echo "buildhome directory does not exist, using cvs co instead."
   $CVS_PATH co buildhome
else
   $CVS_PATH update -A buildhome
endif


cd $PURIFY_HOME

if !(-d $PURIFY_HOME/regressionmodule) then
   echo "regressionmodule does not exist, using cvs co instead."
   $CVS_PATH co regressionmodule
else
   $CVS_PATH update -A regressionmodule
endif

if !(-d $PURIFY_HOME/regressiontest) then
   echo "regressiontest does not exist, using cvs co instead."
   $CVS_PATH co regressiontest
else
   $CVS_PATH update -A regressiontest
endif

echo "Completed checking out modules."

# Check to see if brains2 module was successfully checked out.
if !(-d $BUILD_DIR/brains2) then
   echo "brains2 module was not successfully checked out, exiting"
   echo "If this was executed as a cron job, check the cron output file, " $PURIFY_HOME/.cvs_update/$CRON_LOG_FILE >> $PURIFY_HOME/.cvs_update/errors.out.$DateTimeStamp
   $MAIL-s "cvs update brains2 failed" $MAILING_LIST < $PURIFY_HOME/.cvs_update/errors.out.$DateTimeStamp
   exit
endif

# Check to see if buildhome module was successfully checked out.
if !(-d $BUILD_DIR/buildhome) then
   echo "buildhome module was not successfully checked out, exiting"
   echo "Check the cron output file, " $PURIFY_HOME/.cvs_update/$CRON_LOG_FILE >> $PURIFY_HOME/.cvs_update/errors.out.$DateTimeStamp
   $MAIL -s "`hostname -s`: cvs update buildhome failed" $MAILING_LIST < $PURIFY_HOME/.cvs_update/errors.out.$DateTimeStamp
   exit
endif

