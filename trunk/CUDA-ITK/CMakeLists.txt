CMAKE_MINIMUM_REQUIRED(VERSION 2.4)
IF(COMMAND CMAKE_POLICY)
  CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND CMAKE_POLICY)

PROJECT(CUDAInsight)

FIND_PACKAGE(ITK REQUIRED)
INCLUDE(${ITK_USE_FILE})

IF( NOT ITK_USE_REVIEW )
  MESSAGE(FATAL_ERROR "ITK must be build with ITK_USE_REVIEW turned ON")
ENDIF( NOT ITK_USE_REVIEW )

FIND_PACKAGE(VTK REQUIRED)
INCLUDE(${VTK_USE_FILE})

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin CACHE INTERNAL "Where to put the executables") 
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin CACHE INTERNAL "Where to put the libraries") 

SET(CMAKE_MODULE_PATH ${ITK_SOURCE_DIR}/CMake)

INCLUDE(${CMAKE_SOURCE_DIR}/CMake/cuda/FindCuda.cmake)

CUDA_INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR} 
                          ${FOUND_CUT_INCLUDE}
                          ${FOUND_CUDA_NVCC_INCLUDE}

CONFIGURE_FILE(
  ${CudaSupport_SOURCE_DIR}/CudappSupportConfigure.h.in 
  ${CudaSupport_BINARY_DIR}/CudappSupportConfigure.h
)


INCLUDE(CTest)

INCLUDE_DIRECTORIES(
  ${PROJECT_SOURCE_DIR}/Source
  )

# Disable MSVC 8 warnings
IF(WIN32)
  OPTION(DISABLE_MSVC8_DEPRECATED_WARNINGS
         "Disable Visual Studio 8 deprecated warnings" ON)
  MARK_AS_ADVANCED(FORCE DISABLE_MSVC8_DEPRECATED_WARNINGS)  
  IF(DISABLE_MSVC8_DEPRECATED_WARNINGS)
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE)
  ENDIF(DISABLE_MSVC8_DEPRECATED_WARNINGS)
ENDIF(WIN32)


ADD_SUBDIRECTORY( Source )
ADD_SUBDIRECTORY( Testing )
ADD_SUBDIRECTORY( Documents )
