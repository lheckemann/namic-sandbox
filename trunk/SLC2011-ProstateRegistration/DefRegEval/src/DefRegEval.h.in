#ifndef __DefRegEval_h
#define __DefRegEval_h

// disable warnings for sprintf
#define _CRT_SECURE_NO_WARNINGS
// disable warnings for std::copy
#define _SCL_SECURE_NO_WARNINGS

#include "vtksys/CommandLineArguments.hxx"

#include "itkImage.h"
#include "itkImageFileReader.h" 
#include "itkImageFileWriter.h" 

static const unsigned int  ImageDimension = 3;

typedef float  InternalImagePixelType;
typedef itk::Image <InternalImagePixelType, ImageDimension> InternalImageType;
typedef itk::ImageFileReader< InternalImageType  > InternalImageReaderType;

typedef itk::Vector<InternalImagePixelType, ImageDimension> VectorPixelType;
typedef itk::Image<VectorPixelType,  ImageDimension> DeformationFieldType;

typedef unsigned char  ExternalImagePixelType;
typedef itk::Image <ExternalImagePixelType, ImageDimension> ExternalImageType;
typedef itk::ImageFileReader<ExternalImageType> ExternalImageReaderType;
typedef itk::ImageFileWriter<ExternalImageType> ExternalImageWriterType;

class DefRegEvalGlobal
{
public:
  static const int OrganMaterialId;
  static const int SupportMaterialId;
  
  static const int OrganIntensity;
  
  static const char* ArrayNameMaterial;
  static const char* ArrayNameOnSurface;
  
  static const int SupportedDimension;
};

// Change VTK logging to force use console for output (even on Windows)
#define VTK_LOG_TO_CONSOLE { class vtkConsoleOutputWindow : public vtkOutputWindow { public: static vtkConsoleOutputWindow* New() { return new vtkConsoleOutputWindow; } }; \
  vtkOutputWindow::SetInstance(vtkSmartPointer<vtkConsoleOutputWindow>::New()); };

#endif // __DefRegEval_h
